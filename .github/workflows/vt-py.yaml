name: Analysis+
on:
  workflow_dispatch:
    inputs:
      subject_url:
        description: 'The subject URL from the GitHub notification'
        required: true
        type: string

jobs:
  vt-cli:
    runs-on: ubuntu-latest
    steps:
      - name: Print Subject URL
        run: echo "Received subject_url:" "${{ github.event.inputs.subject_url }}"

      - uses: actions/checkout@v4

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip' # caching pip dependencies
          
      - run: pip install -r requirements.txt
    
      - name: Cache jq
        id: cache-jq
        uses: actions/cache@v4
        with:
          path: ~/jq
          key: jq-${{ runner.os }}-jq-1.8.1
    
      - name: Download and install jq
        if: steps.cache-jq.outputs.cache-hit != 'true'
        run: |
          curl -L -o jq https://github.com/jqlang/jq/releases/download/jq-1.8.1/jq-linux-amd64
          echo "020468de7539ce70ef1bceaf7cde2e8c4f2ca6c3afb84642aabc5c97d9fc2a0d jq" | sha256sum -c
          chmod +x jq
          mv jq ~/jq
  
      - name: Add jq to GITHUB_PATH
        run: echo "$HOME" >> "$GITHUB_PATH"
  
      - name: extract apk(s) urls
        id: find-apk-urls
        run: |
          curl -sL ${{ github.event.inputs.subject_url }} | jq -r .assets[].browser_download_url | grep -E '\.apks?$' | grep -v x86 > ~/urls.txt || echo "result=failure" >> $GITHUB_OUTPUT
          cat ~/urls.txt || exit 0
          
      - name: vt scan urls
        env:
          VT_KEY: ${{ VT_KEY }}
        id: scan-urls
        if: steps.find-apk-urls.outputs.result != 'failure'
        run: |
          cat ~/urls.txt
          cat ~/urls.txt | python vt.py --apikey="$VT_KEY"
          
      # - name: vt scan files
      #   if: steps.find-apk-urls.outputs.result != 'failure'
      #   env:
      #     GH_TOKEN: ${{ github.token }}
      #   run: |
      #     urls=$(cat ~/urls.txt)
      #     curl -L -Z --remote-name-all $urls
      #     vt scan file *.apk *.apks | cut -f 2 -d ' ' | vt analysis -
